events {
    worker_connections 1024;
}

http {
  root /usr/share/nginx/html/;
  index index.html;
  server_tokens off;
  server {
    listen 80;
	  listen [::]:80;
	  server_name boilerplate;
	  return 301 https://$host$request_uri;
  }

  server {
	  listen 443 ssl http2;
	  listen [::]:443 ssl http2;

    server_name boilerplate;
	  ssl_certificate path/to/chain.pem;
	  ssl_certificate_key path/to/privkey.pem;

    if ($scheme != https) {
      return 301 https://$host$request_uri;
    }

	  add_header 'Content-Security-Policy' 'upgrade-insecure-requests';

	  location / {
	    proxy_set_header Host $host;
    	proxy_set_header X-Real-Ip $remote_addr;
      proxy_pass http://ui:3000;
	  }

    location /rest/ {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, Accept, Origin, Cache-Control, X-Requested-With' always;
      if ($request_method = 'OPTIONS') {
         add_header 'Access-Control-Allow-Origin' '*' always;
         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
         add_header 'Access-Control-Allow-Headers' 'Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, Accept, Origin, Cache-Control, X-Requested-With' always;
         add_header 'Access-Control-Max-Age' 1728000;
         add_header 'Content-Type' 'text/plain charset=UTF-8';
         add_header 'Content-Length' 0;
         return 204;
      }
      proxy_set_header Host $host;
      proxy_set_header X-Real-Ip $remote_addr;
    	proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass_header Set-Cookie;
      proxy_read_timeout                 900;
    	proxy_buffers 32 4k;
          rewrite /rest/(.*) /$1 break;
          proxy_pass http://boilerplate:8080;
       }
    }
}
